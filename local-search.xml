<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>What is Sass?</title>
    <link href="/2022/08/22/20220822/"/>
    <url>/2022/08/22/20220822/</url>
    
    <content type="html"><![CDATA[<p>  我們可以想像一下…<br>假設你要洗衣服，你需要按洗衣機的觸控面板才能啟動。<br>Sass就像是你使用洗衣觸控面板功能，你的指令會轉化成洗衣機懂的語言，才能啟動洗衣機執行洗衣服。</p><p>Sass（英文全稱：Syntactically Awesome Stylesheets），是一個開發的層疊樣式表語言。　<br>Sass是一個將指令碼解析成CSS的<a href="https://zh.wikipedia.org/zh-tw/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80"><strong>手稿語言</strong></a>，即SassScript。Sass包括兩套語法。<br>sass是舊版本，業界主流是scss。<br>最開始的語法叫做「縮排語法」，使用縮排來區分代碼塊，並且用換行將不同規則分隔開。<br>而較新的語法叫做「SCSS」，使用和CSS一樣的塊語法，即使用大括號將不同的規則分開，使用分號將具體的樣式分開。<br>通常情況下，這兩套語法通過.sass和.scss兩個<a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D"><strong>副檔名</strong></a>區分開。</p><hr><h3 id="Sass-中的-amp-是什麼"><a href="#Sass-中的-amp-是什麼" class="headerlink" title="Sass 中的 &amp; 是什麼 ?"></a>Sass 中的 <strong>&amp;</strong> 是什麼 ?</h3><hr><p>“ &amp; “ 可以看作是串聯選擇器的連接符。<br>連接符引用父層選擇器作替代， &amp; 連接符會代替父層選擇器: <a>，然後使鏈結懸停並改變鏈接的顏色爲其他顏色。<br>“&amp;” 省下了重複撰寫的時間，但過於巢狀也會導致程式碼不好維護，盡量在三層內解決！</p><h5 id="基礎概念"><a href="#基礎概念" class="headerlink" title="基礎概念:"></a>基礎概念:</h5><p>在CSS中，要想給一個元素賦予一定的樣式，我們必須得先取到這個元素。那麼就得需要選擇器，通過選擇器來選擇指定元素，然後賦予所需的樣式。</p><p>而CSS選擇器有很多種，比如層次選擇器中的**<code>後代選擇器</code><strong>、</strong><code>兄弟選擇器</code><strong>、</strong><code>通用兄弟選擇器</code>**等。</p><p>而這些選擇器都通過元素與元素之間的關係來確定的，比如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.parent</span> <span class="hljs-selector-class">.child</span> &#123;...&#125;<br><br></code></pre></td></tr></table></figure><p>除了這些選擇器，還有**<code>偽類選擇器</code>**:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.ele</span><span class="hljs-selector-pseudo">:after</span>&#123;...&#125;<br><br></code></pre></td></tr></table></figure><p>有時候還有**<code>多類選擇器</code>**：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.className1</span><span class="hljs-selector-class">.className2</span>&#123;...&#125;<br><br></code></pre></td></tr></table></figure><p>這些選擇器在CSS中都是基礎知識，很多同學對其來說並不陌生。今天要說的也不是選擇器如何用，而是想說說，如何在編寫代碼的時候，少寫選擇器，就能實現他們之間的依賴關係。</p><h6 id="引用父層選擇器-的連接符-amp"><a href="#引用父層選擇器-的連接符-amp" class="headerlink" title="引用父層選擇器 的連接符 &amp;"></a>引用父層選擇器 的連接符 <strong>&amp;</strong></h6><p>在CSS中，這種想法是無法實現的，但在Sass中，可以輕鬆的通過**連接符<code>&amp;</code>**來實現。</p><p>我們先來回憶一下，CSS中常見的一組樣式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*頁面中鏈接的顏色*/</span><br><span class="hljs-selector-tag">a</span> &#123;<br>  clolor: <span class="hljs-number">#ff3366</span>; <br>&#125;<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cc0033</span>; <br>&#125;<br><span class="hljs-comment">/*主選單中鏈接的顏色*/</span><br><span class="hljs-selector-class">.nav-menu</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff668c</span>; <br>&#125;<br><span class="hljs-selector-class">.nav-menu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff99b3</span>; <br>&#125;<br><span class="hljs-selector-class">.nav-menu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.active</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff0040</span>; <br>&#125;<br><span class="hljs-comment">/*頁尾選單中鏈接的顏色*/</span><br><span class="hljs-selector-class">.footer-menu</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#ff1a53</span>; <br>&#125;<br><span class="hljs-selector-class">.footer-menu</span> <span class="hljs-selector-tag">a</span><span class="hljs-selector-pseudo">:hover</span> &#123;<br>  <span class="hljs-attribute">color</span>: <span class="hljs-number">#cc0033</span>; <br>&#125;<br></code></pre></td></tr></table></figure><p>這是一組控制頁面鏈接顏色的樣式代碼，首先在樣式中定義了共通樣的連結文預設顏色，而主選單和頁尾選單中連結文預設顏色各不相同，我們需要通過類名<code>.nav-menu</code>和<code>.footer-menu</code>來覆蓋默認的樣式。</p><p>這樣我們在寫樣式的時候，在選擇器這一部分，我們都需要書寫相同的一個部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sass">aa:hover<br></code></pre></td></tr></table></figure><p>或許你覺得這有什麼的，真是大驚小怪。但是，如果你的選擇器偏長，重複的代碼偏多，一定會影響您的開發速度，從而影響你的效率。</p><p>那麼在Sass中，通過**連接符<code>&amp;</code>**可以幫助我們避免這樣的問題，而且還可以實現一些其他的效果。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My first blog</title>
    <link href="/2022/08/19/20220819/"/>
    <url>/2022/08/19/20220819/</url>
    
    <content type="html"><![CDATA[<p>大家好! 我是<a href="https://github.com/naiomidaphne">Daphne</a>! </p><p>這是我學習網頁開發後第一次自己架設的部落格，也是我第一篇部落格，算是一個新的開始，未來有更多的文章分享給大家！</p><p>期待與大家多多交流囉！</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
